{"version":3,"file":"static/js/789.124bea04.chunk.js","mappings":"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","sources":["helpers/ButtonSplit/ButtonSplit.styled.js","components/Auth/AuthForm.styled.js","components/Auth/LoginForm/LoginForm.styled.js","components/Auth/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","utils/SEO.jsx","utils/schemas.js"],"sourcesContent":["import { theme } from 'components/baseStyles/Variables.styled';\nimport styled from 'styled-components';\n\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 180px;\n  height: 48px;\n  padding: 4px 20px;\n\n  font-family: ${theme.fonts[0]};\n  font-style: normal;\n  font-weight: 700;\n  font-size: ${theme.fontSizes.small};\n  color: ${props=>props.theme.black};\n  text-decoration: none;\n  text-transform: uppercase;\n\n  background-color: transparent;\n  border: 1px solid ${props=>props.theme.grey};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: ${props=>props.theme.white_text};\n    background-color: ${props=>props.theme.black};\n  }\n`;\n\nexport { Button };\n","import styled from \"styled-components\";\nimport { Field, Form } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\nimport {\n  Container,\n  Section,\n  Title,\n} from \"components/baseStyles/CommonStyle.styled\";\nimport { theme } from \"components/baseStyles/Variables.styled\";\nimport { Button } from \"helpers/ButtonSplit/ButtonSplit.styled\";\n\nconst FormSection = styled(Section)`\n  padding: 0;\n  background-color: ${(props) => props.theme.black};\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n  }\n`;\n\nconst FormContainer = styled(Container)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 100px;\n  padding-bottom: 120px;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n  }\n`;\n\nconst FormTitle = styled(Title)`\n  margin-bottom: 40px;\n  margin-top: 0;\n  color: ${(props) => props.theme.white_text};\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: ${theme.fontSizes.extraXL};\n    font-weight: 500;\n    margin-bottom: 32px;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: ${theme.fontSizes.extraXL};\n    font-weight: 500;\n    margin-bottom: 48px;\n  }\n`;\n\nconst StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 32px;\n  margin: 0 auto;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    margin: 0 auto;\n    background-color: transparent;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    gap: 40px;\n  }\n  & > div {\n    position: relative;\n  }\n`;\n\nconst Input = styled(Field)`\n  width: calc(100vw - 60px);\n  max-width: 365px;\n  padding: 11px 0 12px 14px;\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 300;\n  line-height: normal;\n  border-radius: 14px;\n  color: ${(props) => props.theme.black};\n  background: ${(props) => props.theme.white_fon};\n\n  border: none;\n  transition: ${theme.transition[0]};\n\n  &:focus,\n  &:hover {\n    border-color: ${(props) => props.theme.grey};\n    color: ${(props) => props.theme.grey};\n    outline: none;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: ${theme.fontSizes.medium};\n    padding: 14px 0 13px 32px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding: 22px 25px;\n  }\n\n  &::placeholder {\n  }\n`;\n\nconst Btn = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 300;\n  line-height: normal;\n  text-transform: uppercase;\n  color: ${(props) => props.theme.black};\n\n  border: none;\n  border-radius: 4px;\n  background: ${(props) => props.theme.white_fon};\n\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  transition: ${theme.transition[0]};\n\n  &:hover,\n  &:focus {\n    color: ${(props) => props.theme.white_text};\n    background: ${(props) => props.theme.black};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: auto;\n  }\n`;\n\nconst ErrorBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: -5px;\n  left: 15px;\n  margin-bottom: -16px;\n  color: #e53e3e;\n\n  font-family: ${theme.fonts[1]};\n  font-size: ${theme.fontSizes.small};\n  font-style: normal;\n  line-height: 1.4;\n  letter-spacing: 0.03em;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    left: 32px;\n  }\n`;\n\nconst BtnContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n  width: 100%;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 450px;\n    font-size: ${theme.fontSizes.medium};\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 600px;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${(props) => props.theme.black};\n  transition: ${theme.transition[0]};\n\n  &:hover,\n  &:focus {\n    color: ${(props) => props.theme.grey};\n  }\n`;\n\nconst BoxText = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  gap: 10px;\n\n  font-family: ${theme.fonts[0]};\n  font-style: normal;\n  font-weight: 400;\n  font-size: ${theme.fontSizes.small};\n  letter-spacing: 0.04em;\n  color: ${(props) => props.theme.black};\n`;\n\nconst Label = styled.label`\n  color: ${(props) => props.theme.white_text};\n  font-family: ${theme.fonts[0]};\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 80%;\n  letter-spacing: 1.6px;\n  text-transform: uppercase;\n`;\n\nconst Span = styled.span`\n  position: absolute;\n  left: 20px;\n  top: 13px;\n\n  font-family: ${theme.fonts[0]};\n  font-size: ${theme.fontSizes.small};\n  text-transform: uppercase;\n  pointer-events: none;\n\n  transition: ${theme.transition[0]};\n`;\n\nconst IconValid = styled(FaCheck)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nconst IconInValid = styled(FaTimes)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n\n  & svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\nconst ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n\n  cursor: pointer;\n\n  & svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\nexport {\n  FormSection,\n  FormContainer,\n  FormTitle,\n  StyledForm,\n  Input,\n  Label,\n  Btn,\n  StyledLink,\n  BoxText,\n  ErrorBox,\n  BtnContainer,\n  IconInValid,\n  IconValid,\n  Span,\n  ShowPassword\n};\n","import styled from 'styled-components';\nimport { FormTitle, StyledForm } from '../AuthForm.styled';\n\nexport const TitleLogin = styled(FormTitle)`\nmargin-top: 81px;\n`;\n\nexport const FormLogin = styled(StyledForm)``;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik, Formik } from 'formik';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport schemas from 'utils/schemas';\nimport {theme} from 'components/baseStyles/Variables.styled';\n\nimport { FormLogin, TitleLogin } from './LoginForm.styled';\nimport { logIn } from 'redux/auth/operations';\nimport {\n  BoxText,\n  Btn,\n  BtnContainer,\n  ErrorBox,\n  FormContainer,\n  FormSection,\n  IconInValid,\n  IconValid,\n  Input,\n  ShowPassword,\n  Span,\n  StyledLink,\n} from '../AuthForm.styled';\n\nexport const LoginForm = () => {\n  const [isShown, setIsShown] = useState(true); //\n  const [showPass, setShowPass] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const hideForm = () => {\n    setIsShown(true);\n  };\n\n  const onSubmit = values => {\n    setIsLoading(true);\n    const { email, password } = values;\n    dispatch(\n      logIn({\n        email,\n        password,\n      }),\n      hideForm(),\n    );\n    setIsLoading(false);\n  };\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schemas.schemasLogin,\n    onSubmit,\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) ||\n    (formik.errors.password && formik.touched.password) ||\n    formik.values.email === ''\n      ? true\n      : false;\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n\n  const showAccentValidateInput = (hasValue, isValide) => {\n    return !hasValue\n      ? null\n      : isValide\n      ? `${theme.colors.red}`\n      : `${theme.colors.darkGreen}`;\n  };\n  return (\n    <FormSection>\n      <FormContainer>\n        <Formik validationSchema={schemas.schemasLogin}>\n          <FormLogin onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <TitleLogin>{'Login Page'}</TitleLogin>\n            {isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.email,\n                      formik.errors.email,\n                    ),\n                  }}\n                  name=\"email\"\n                  type=\"email\"\n                  validate={schemas.schemasLogin.email}\n                  onChange={formik.handleChange}\n                  value={formik.values.email}\n                  onBlur={formik.handleBlur}\n                />\n                {!formik.values.email ? null : !formik.errors.email ? (\n                  <IconValid color={theme.colors.green} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n                {formik.errors.email || formik.touched.email ? (\n                  <ErrorBox>{formik.errors.email}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">Email</Span>\n              </div>\n            )}\n\n            {isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.password,\n                      formik.errors.password,\n                    ),\n                  }}\n                  name=\"password\"\n                  type={showPass ? 'text' : 'password'}\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n                  onBlur={formik.handleBlur}\n                />\n\n                <ShowPassword onClick={showPassword}>\n                  {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {formik.errors.password && formik.touched.password ? (\n                  <ErrorBox>{formik.errors.password}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">Password</Span>\n              </div>\n            )}\n            <BtnContainer>\n              {isShown && (\n                <Btn\n                  type=\"submit\"\n                  disabled={isValid}\n                  aria-label=\"submit log in\"\n                >\n                  {isLoading ? 'Loading' : 'Log In'}\n                </Btn>\n              )}\n\n              {!isShown && (\n                <Btn type=\"submit\">{isLoading ? 'Loading' : 'Log In'}</Btn>\n              )}\n              <BoxText>\n                <StyledLink to=\"/register\">{'Create acount'}</StyledLink>\n                <StyledLink to=\"/forgot_password\">\n                  {'Forgot your password?'}\n                </StyledLink>\n              </BoxText>\n            </BtnContainer>\n          </FormLogin>\n        </Formik>\n      </FormContainer>\n    </FormSection>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/Auth/LoginForm/LoginForm';\nimport { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\n\nconst LoginPage = () => {\n  useEffect(() => {\n    window.scrollTo(({ top: 0, left: 0, behavior: 'smooth' }))\n  }, [])\n  return (\n    <>\n      <SEO title=\"Login\" description=\"\" />\n      <LoginForm/>\n    </>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nexport function SEO({ title, description }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n","import * as Yup from \"yup\";\n\nconst registerSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(/\\S{2,}/, \"Name too short (min 2)\")\n    .matches(\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\n      \"Name must includes only Latin alphabet\"\n    )\n    .required(\"Require field\"),\n  surname: Yup.string()\n    .matches(/\\S{2,}/, \"Name too short (min 2)\")\n    .matches(\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\n      \"Name must includes only Latin alphabet\"\n    )\n    .required(\"Require field\"),\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, \"Email must be without spaces\")\n    .matches(/\\S{7,}/, \"Email too short (min 7 symbols)\")\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      \"Invalid email\"\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      \"Dashes should only be inside email\"\n    )\n    .required(\"Require field\"),\n  phone: Yup.number()\n    .nullable(true)\n    .required(\"Require field\")\n    .min(99999)\n    .max(999999999999),\n  company: Yup.string()\n    .matches(/\\S{2,}/, \"Company too short (min 2)\")\n    .matches(\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\n      \"Company must includes only Latin alphabet\"\n    )\n    .required(\"Require field\"),\n  position: Yup.string()\n    .matches(/\\S{2,}/, \"Position too short (min 2)\")\n    .matches(\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\n      \"Position must includes only Latin alphabet\"\n    )\n    .required(\"Require field\"),\n  packageUser: Yup.string(),\n});\n\nconst schemasLogin = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, \"Email must be without spaces\")\n    .matches(/\\S{7,}/, \"Email too short (min 7 symbols)\")\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      \"Invalid email\"\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      \"Dashes should only be inside email\"\n    )\n    .required(\"Require\"),\n  password: Yup.string()\n    .min(7, \"Password too short (min 7)\")\n    .max(32, \"Password too long (max 32)\")\n    .matches(/^\\s*\\S+\\s*$/, \"Password must be without spaces\")\n    .required(\"Require\"),\n});\n\nconst changePasswordSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, \"Email must be without spaces\")\n    .matches(/\\S{7,}/, \"Email too short (min 7 symbols)\")\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      \"Invalid email\"\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      \"Dashes should only be inside email\"\n    )\n    .required(\"Require field\"),\n});\n\nconst updateSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(/\\S{2,}/, \"Name too short (min 2)\")\n    .matches(\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\n      \"Name must includes only Latin alphabet\"\n    )\n    .required(\"Require field\"),\n  surname: Yup.string()\n    .matches(/\\S{2,}/, \"Name too short (min 2)\")\n    .matches(\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\n      \"Surname must includes only Latin alphabet\"\n    ),\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, \"Email must be without spaces\")\n    .matches(/\\S{7,}/, \"Email too short (min 7 symbols)\")\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      \"Invalid email\"\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      \"Dashes should only be inside email\"\n    )\n    .required(\"Require field\"),\n  phone: Yup.number()\n    .nullable(true)\n    .required(\"Require field\")\n    .min(99999)\n    .max(999999999999),\n  birthday: Yup.date(),\n  company: Yup.string()\n    .matches(/\\S{2,}/, \"Company too short (min 2)\")\n    .matches(\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\n      \"Company must includes only Latin alphabet\"\n    )\n    .required(\"Require field\"),\n  position: Yup.string()\n    .matches(/\\S{2,}/, \"Position too short (min 2)\")\n    .matches(\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\n      \"Position must includes only Latin alphabet\"\n    )\n    .required(\"Require field\"),\n});\n\nconst updatePasswordSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(7, \"Password too short (min 7)\")\n    .max(32, \"Password too long (max 32)\")\n    .matches(/^\\s*\\S+\\s*$/, \"Password must be without spaces\")\n    .required(\"Require field\"),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\")], \"Your passwords do not match\")\n    .required(\"Require field\"),\n});\n\nconst schemas = {\n  registerSchema,\n  schemasLogin,\n  changePasswordSchema,\n  updateSchema,\n  updatePasswordSchema,\n};\n\nexport default schemas;\n"],"names":["Button","styled","button","_templateObject","_taggedTemplateLiteral","theme","fonts","fontSizes","small","props","black","grey","white_text","FormSection","Section","breakpoints","tablet","desktop","FormContainer","Container","_templateObject2","FormTitle","Title","_templateObject3","extraXL","StyledForm","Form","_templateObject4","Input","Field","_templateObject5","white_fon","transition","medium","Btn","_templateObject6","ErrorBox","div","_templateObject7","BtnContainer","_templateObject8","StyledLink","Link","_templateObject9","BoxText","_templateObject10","Label","label","_templateObject11","Span","span","_templateObject12","IconValid","FaCheck","_templateObject13","IconInValid","FaTimes","_templateObject14","ShowPassword","_templateObject15","TitleLogin","FormLogin","LoginForm","isShown","setIsShown","useState","showPass","setShowPass","isLoading","setIsLoading","dispatch","useDispatch","formik","useFormik","initialValues","email","password","validationSchema","schemas","schemasLogin","onSubmit","values","logIn","isValid","errors","touched","showAccentValidateInput","hasValue","isValide","concat","colors","red","darkGreen","_jsx","children","Formik","_jsxs","handleSubmit","autoComplete","style","borderColor","name","type","validate","onChange","handleChange","value","onBlur","handleBlur","color","green","className","onClick","showPassword","ImEye","ImEyeBlocked","disabled","to","LoginPage","useEffect","window","scrollTo","top","left","behavior","_Fragment","SEO","title","description","_ref","Helmet","content","registerSchema","Yup","shape","matches","required","surname","phone","nullable","min","max","company","position","packageUser","changePasswordSchema","updateSchema","birthday","updatePasswordSchema","confirmPassword","oneOf"],"sourceRoot":""}