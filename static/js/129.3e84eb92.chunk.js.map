{"version":3,"file":"static/js/129.3e84eb92.chunk.js","mappings":"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","sources":["components/Auth/LoginForm/LoginForm.styled.js","components/Auth/ForgotPasswordForm/ForgotPasswordForm.jsx","pages/ForgotPasswordPage.jsx","utils/SEO.jsx"],"sourcesContent":["import {\n  FormTitle,\n  FormInput,\n  StyledForm,\n} from 'components/baseStyles/Form.styled';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport styled from 'styled-components';\nimport { BtnLight } from 'components/baseStyles/Button.styled';\nimport { Link } from 'react-router-dom';\nimport { Container } from 'components/baseStyles/CommonStyle.styled';\n\nexport const TitleLogin = styled(FormTitle)`\n  width: 100%;\n  text-align: start;\n`;\nexport const ErrorBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: -5px;\n  left: 15px;\n  margin-bottom: -16px;\n  color: #e53e3e;\n  font-family: ${theme.fonts[1]};\n  font-size: ${theme.fontSizes.small};\n  font-style: normal;\n  line-height: 1.4;\n  letter-spacing: 0.03em;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    left: 32px;\n  }\n`;\nexport const FormContainer = styled(Container)`\n  max-width: 250px;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    max-width: 540px;\n  }\n`;\nexport const FormInputLogin = styled(FormInput)`\n  min-width: 250px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    min-width: 450px;\n    margin-bottom: 35px;\n  }\n`;\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 80%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    height: 50px;\n    top: 62%;\n  }\n  & svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\nexport const Btn = styled(BtnLight)`\n  font-size: 14px;\n  width: 180px;\n  height: 50px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 16px;\n    width: 217px;\n    height: 70px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 18px;\n  }\n`;\nexport const StyledLink = styled(Link)`\n  color: ${props => props.theme.white_text};\n  transition: ${theme.transition[0]};\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.grey};\n  }\n`;\nexport const BoxText = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: end;\n  flex-direction: column;\n  gap: 5px;\n  margin-bottom: 16px;\n\n  font-family: ${theme.fonts[0]};\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  letter-spacing: 0.04em;\n  color: ${props => props.theme.white_text};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 18px;\n  }\n`;\n\nexport const FormStyled = styled(StyledForm)`\n  gap: 15px;\n  &:last-child {\n    margin-bottom: 20px;\n  }\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik, Formik } from 'formik';\nimport schemas from 'utils/schemas';\nimport { forgotPasswordAuth } from 'redux/auth/operations';\nimport { Section, Container } from 'components/baseStyles/CommonStyle.styled';\nimport { useNavigate } from 'react-router-dom';\nimport { theme } from 'components/baseStyles/Variables.styled.js';\nimport { onSuccess } from 'helpers/Messages/NotifyMessages.jsx';\nimport {\n  FormInputLogin,\n  FormStyled,\n  TitleLogin,\n  Btn,\n  BoxText,\n  StyledLink,\n  ErrorBox,\n} from '../LoginForm/LoginForm.styled.js';\nimport {\n  FormLabel,\n  Error,\n  FormField,\n} from 'components/baseStyles/Form.styled.js';\nimport { useTranslation } from 'react-i18next';\n\nconst ForgotPasswordForm = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const onSubmit = ({ values }) => {\n    setIsLoading(true);\n    const { email } = values;\n    dispatch(\n      forgotPasswordAuth({\n        email,\n      }),\n    );\n    onSuccess('password has been changed. Please check your email');\n    setIsLoading(false);\n    navigate(`/signin`);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n    },\n    validationSchema: schemas.changePasswordSchema,\n    onSubmit: (values, action) => {\n      onSubmit({ values, action });\n    },\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) || formik.values.email === ''\n      ? true\n      : false;\n\n  const showAccentValidateInput = (hasValue, isValide) => {\n    return !hasValue\n      ? null\n      : isValide\n      ? `${theme.colors.red}`\n      : `${theme.colors.darkGreen}`;\n  };\n\n  return (\n    <Section>\n      <Container>\n        <Formik validationSchema={schemas.changePasswordSchema}>\n          <FormStyled onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <TitleLogin>{'Forgot Password'}</TitleLogin>\n            <FormField>\n              <FormLabel htmlFor=\"email\">\n                <span>{t('Email')}</span>\n                {formik.errors.name && formik.touched.name ? (\n                  <Error>{formik.errors.name}</Error>\n                ) : null}\n              </FormLabel>\n              <FormInputLogin\n                style={{\n                  borderColor: showAccentValidateInput(\n                    formik.values.email,\n                    formik.errors.email,\n                  ),\n                }}\n                name=\"email\"\n                type=\"email\"\n                value={formik.values.email}\n                validate={schemas.changePasswordSchema.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              />\n              {formik.errors.email && formik.touched.email ? (\n                <ErrorBox style={{ bottom: '22px' }}>\n                  {formik.errors.email}\n                </ErrorBox>\n              ) : null}\n            </FormField>\n\n            <Btn\n              style={{ height: 'auto' }}\n              type=\"submit\"\n              disabled={isValid}\n              aria-label=\"submit to change password\"\n            >\n              {isLoading ? 'Loading' : 'Change'}{' '}\n            </Btn>\n            <BoxText>\n              <span>{'Already have an account?'}</span>{' '}\n              <StyledLink to=\"/login\">{'Log In'}</StyledLink>\n            </BoxText>\n          </FormStyled>\n        </Formik>\n      </Container>\n    </Section>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import ForgotPasswordForm from 'components/Auth/ForgotPasswordForm/ForgotPasswordForm';\nimport { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\n\nconst ForgotPasswordPage = () => {\n  useEffect(() => {\n    window.scrollTo(({ top: 0, left: 0, behavior: 'smooth' }))\n  }, [])\n  return (\n    <>\n      <SEO title=\"Forgot Password\" description=\"\" />\n      <ForgotPasswordForm/>\n    </>\n  );\n};\n\nexport default ForgotPasswordPage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nexport function SEO({ title, description }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n"],"names":["TitleLogin","styled","FormTitle","_templateObject","_taggedTemplateLiteral","ErrorBox","div","_templateObject2","theme","fonts","fontSizes","small","breakpoints","tablet","FormContainer","Container","_templateObject3","FormInputLogin","FormInput","_templateObject4","ShowPassword","span","_templateObject5","Btn","BtnLight","_templateObject6","StyledLink","Link","_templateObject7","props","white_text","transition","grey","BoxText","_templateObject8","desktop","FormStyled","StyledForm","_templateObject9","ForgotPasswordForm","isLoading","setIsLoading","useState","dispatch","useDispatch","navigate","useNavigate","t","useTranslation","formik","useFormik","initialValues","email","validationSchema","schemas","changePasswordSchema","onSubmit","values","action","_ref","forgotPasswordAuth","onSuccess","isValid","errors","touched","_jsx","Section","children","Formik","_jsxs","handleSubmit","autoComplete","FormField","FormLabel","htmlFor","name","Error","style","borderColor","hasValue","isValide","concat","colors","red","darkGreen","type","value","validate","onChange","handleChange","onBlur","handleBlur","bottom","height","disabled","to","showAccentValidateInput","ForgotPasswordPage","useEffect","window","scrollTo","top","left","behavior","_Fragment","SEO","title","description","Helmet","content"],"sourceRoot":""}